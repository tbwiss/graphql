name: "Aura teardown"

on:
  workflow_call:
    secrets:
      AURA_FREE_PASSWORD:
        description: "Contains the password for the Aura free instance"
        required: true
      AURA_FREE_URI:
        description: "Contains the URI for the Aura free instance"
        required: true
      AURA_PROFESSIONAL_PASSWORD:
        description: "Contains the password for the Aura professional instance"
        required: true
      AURA_PROFESSIONAL_URI:
        description: "Contains the URI for the Aura professional instance"
        required: true

env:
  AURA_FREE_PASSWORD: ${{ secrets.AURA_FREE_PASSWORD }}
  AURA_FREE_URI: ${{ secrets.AURA_FREE_URI }}
  AURA_PROFESSIONAL_PASSWORD: ${{ secrets.AURA_PROFESSIONAL_PASSWORD }}
  AURA_PROFESSIONAL_URI: ${{ secrets.AURA_PROFESSIONAL_URI }}

jobs:
  aura-teardown:
    strategy:
      matrix:
        aura-instance:
          - free
          - professional

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: Install dependencies
        run: yarn --immutable
      - name: Install ts-node and typescript
        run: npm install -g ts-node typescript
      - name: Uppercase instance name
        run: |
          lowercase_instance=${{ matrix.aura-instance }}
          echo "AURA_URI_SECRET=AURA_${lowercase_instance^^}_URI" >>"${GITHUB_ENV}"
          echo "AURA_PASSWORD_SECRET=AURA_${lowercase_instance^^}_PASSWORD" >>"${GITHUB_ENV}"
      - name: Delete all data in instance
        run: ts-node tests/integration/teardown.ts
        working-directory: packages/graphql
        env:
          NEO_USER: neo4j
          NEO_PASSWORD: ${{ secrets[env.AURA_PASSWORD_SECRET] }}
          NEO_URL: ${{ secrets[env.AURA_URI_SECRET] }}
