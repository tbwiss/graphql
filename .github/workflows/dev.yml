name: "dev"

on:
  push:
    branches:
      - dev
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * *"

jobs:
  cache-dependencies:
    uses: ./.github/workflows/reusable/reusable-cache-dependencies.yml

  neo-push-tests:
    needs:
      - cache-dependencies

    uses: ./.github/workflows/reusable/reusable-neo-push-tests.yml

  unit-tests:
    needs:
      - cache-dependencies

    uses: ./.github/workflows/reusable/reusable-unit-tests.yml
    with:
      packages: '["graphql","ogm","introspector","plugins/graphql-plugin-auth"]'
    secrets: inherit

  api-library-tests:
    uses: ./.github/workflows/reusable/reusable-api-library-tests.yml

  # nextjs-app-setup:
  #   uses: ./.github/workflows/reusable/reusable-nextjs-app-setup.yml

  package-tests:
    uses: ./.github/workflows/reusable/reusable-package-tests.yml

  integration-tests-on-prem:
    needs:
      - cache-dependencies

    strategy:
      matrix:
        packages:
          [
            { package: "ogm", shard: 1/1 },
            { package: "introspector", shard: 1/1 },
            { package: "graphql", shard: 1/4 },
            { package: "graphql", shard: 2/4 },
            { package: "graphql", shard: 3/4 },
            { package: "graphql", shard: 4/4 },
          ]
        neo4j-version:
          - 4.3.2
          - 4.3
          - 4.4
        graphql-version:
          - "^15.0.0"
          - "^16.0.0"

    runs-on: ubuntu-latest

    services:
      neo4j:
        image: neo4j:${{ matrix.neo4j-version }}-enterprise
        env:
          NEO4J_AUTH: neo4j/testpassword
          NEO4JLABS_PLUGINS: '["apoc"]'
          NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
        ports:
          - 7687:7687

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: Install dependencies
        run: yarn --immutable
      - name: Overwrite GraphQL version
        run: yarn up --exact graphql@${{ matrix.graphql-version }}
      - name: Run @neo4j/graphql integration tests and move coverage
        run: |
          yarn test:int --shard=${{ matrix.packages.shard }} --coverage
          mv coverage coverage-${{ matrix.neo4j-version }}
        working-directory: packages/${{ matrix.packages.package }}
        env:
          NEO_USER: neo4j
          NEO_PASSWORD: testpassword
          NEO_URL: bolt://localhost:7687
      - name: Archive coverage report
        uses: actions/upload-artifact@v3
        with:
          name: integration-coverage-${{ matrix.packages.package }}
          path: packages/${{ matrix.packages.package }}/coverage-${{ matrix.neo4j-version }}/

  toolbox-tests:
    uses: ./.github/workflows/reusable/reusable-toolbox-tests.yml

  aura-teardown:
    needs:
      - cache-dependencies

    uses: ./.github/workflows/reusable/reusable-aura-teardown.yml
    secrets: inherit

  integration-tests-aura:
    needs:
      - cache-dependencies
      - aura-teardown

    strategy:
      matrix:
        packages:
          [
            { package: "ogm", shard: 1/1 },
            { package: "introspector", shard: 1/1 },
            { package: "graphql", shard: 1/4 },
            { package: "graphql", shard: 2/4 },
            { package: "graphql", shard: 3/4 },
            { package: "graphql", shard: 4/4 },
          ]
        aura-instance:
          - free
          - professional

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: Install dependencies
        run: yarn --immutable
      - name: Uppercase instance name
        run: |
          lowercase_instance=${{ matrix.aura-instance }}
          echo "AURA_URI_SECRET=AURA_${lowercase_instance^^}_URI" >>"${GITHUB_ENV}"
          echo "AURA_PASSWORD_SECRET=AURA_${lowercase_instance^^}_PASSWORD" >>"${GITHUB_ENV}"
      - name: Run @neo4j/graphql integration tests
        run: |
          yarn test:int --shard=${{ matrix.packages.shard }} --coverage
          mv coverage coverage-aura-${{ matrix.aura-instance }}
        working-directory: packages/${{ matrix.packages.package }}
        env:
          NEO_USER: neo4j
          NEO_PASSWORD: ${{ secrets[env.AURA_PASSWORD_SECRET] }}
          NEO_URL: ${{ secrets[env.AURA_URI_SECRET] }}
      - name: Archive coverage report
        uses: actions/upload-artifact@v3
        with:
          name: integration-coverage-${{ matrix.packages.package }}
          path: packages/${{ matrix.packages.package }}/coverage-aura-${{ matrix.aura-instance }}/

  upload-integration-coverage:
    needs:
      - cache-dependencies
      - integration-tests-on-prem
      - aura-teardown
      - integration-tests-aura

    strategy:
      matrix:
        package:
          - graphql
          - ogm
          - introspector

    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: integration-coverage-${{ matrix.package }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ matrix.package }},integration
          fail_ci_if_error: true
          verbose: true
